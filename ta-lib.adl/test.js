import chai from 'chai'
import Big from 'big.js'
const { assert } = chai

import adl from './index'

export default () => {
  describe('Input', () => {
    it('should throw error with wrong values', () => {
      assert.throws(adl.bind(null, [null], [null], [null], [null]), Error, 'Input value be an instance of Big or NaN')
      assert.throws(adl.bind(null, [Big(2)], [null], [null], [null]), Error, 'Input value be an instance of Big or NaN')
      assert.throws(adl.bind(null, [Big(2)], [Big(1)], [null], [null]), Error, 'Input value be an instance of Big or NaN')
      assert.throws(adl.bind(null, [Big(2)], [Big(1)], [Big(1)], [null]), Error, 'Input value be an instance of Big or NaN')
      assert.throws(adl.bind(null, [null], [Big(1)], [Big(1)], [Big(1)]), Error, 'Input value be an instance of Big or NaN')
    })
    //TODO: check high == low
  })
  describe('Output', () => {
    let input = {
      high: ['62.3400', '62.0500', '62.2700', '60.7900', '59.9300', '61.7500', '60.0000', '59.0000', '59.0700', '59.2200', '58.7500', '58.6500', '58.4700', '58.2500', '58.3500', '59.8600', '59.5200', '62.1000', '62.1600', '62.6700', '62.3800', '63.7300', '63.8500', '66.1500', '65.3400', '66.4800', '65.2300', '63.4000', '63.1800', '62.7000'],
      low: ['61.3700', '60.6900', '60.1000', '58.6100', '58.7120', '59.8600', '57.9700', '58.0200', '57.4800', '58.3000', '57.8276', '57.8600', '57.9100', '57.8333', '57.5300', '58.5800', '58.3000', '58.5300', '59.8000', '60.9300', '60.1500', '62.2618', '63.0000', '63.5800', '64.0700', '65.2000', '63.2100', '61.8800', '61.1100', '61.2500'],
      close: ['62.1500', '60.8100', '60.4500', '59.1800', '59.2400', '60.2000', '58.4800', '58.2400', '58.6900', '58.6500', '58.4700', '58.0200', '58.1700', '58.0700', '58.1300', '58.9400', '59.1000', '61.9200', '61.3700', '61.6800', '62.0900', '62.8900', '63.5300', '64.0100', '64.7700', '65.2200', '63.2800', '62.4000', '61.5500', '62.6900'],
      volume: ['7849.025', '11692.075', '10575.307', '13059.128', '20733.508', '29630.096', '17705.294', '7259.203', '10474.629', '5203.714', '3422.865', '3962.150', '4095.905', '3766.006', '4239.335', '8039.979', '6956.717', '18171.552', '22225.894', '14613.509', '12319.763', '15007.690', '8879.667', '22693.812', '10191.814', '10074.152', '9411.620', '10391.690', '8926.512', '7459.575']
    }

    Object.keys(input).forEach(key => {
      input[key] = input[key].map(Big)
    })
    let output = ["4774.149226804123711", "-4854.618420254699818", "-12018.536065415990141", "-18248.578781012320416", "-21006.237480519709578", "-39975.769840308069367", "-48784.807741785901879", "-52784.776741785901879", "-47316.888647446279238", "-48561.255038750627064", "-47216.452050892864705", "-49573.680531905522932", "-49866.245174762665790", "-49353.808073250786740", "-47389.238195202006252", "-50906.729007702006252", "-48739.882729013481662", "-32400.756140778187544", "-25054.909818744289239", "-27070.566232537392687", "-17955.046524017213315", "-20120.030001745043311", "-17926.229919392102135", "-33026.003662582763613", "-31982.747111401661251", "-41742.081861401661251", "-50501.411366352156301", "-53782.997682141629985", "-58914.664000982209695", "-51557.979690637382109"]
    let result = adl(input['high'], input['low'], input['close'], input['volume'])
    it('should return an array', () => {
      assert.isTrue(Array.isArray(result))
    })
    it('should return correct values', () => {
      for (let i = 0; i < result.length; i++) {
        assert.isTrue(result[i].toFixed(15) === output[i])
      }
    })
  })
}
