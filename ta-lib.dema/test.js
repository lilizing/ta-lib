import chai from 'chai'
import Big from 'big.js'
const { assert } = chai

import dema from './index'

export default () => {
  describe('Input', () => {
    it('should throw error with wrong timeperiod param', () => {
      assert.throws(dema.bind(null, [], null), Error, 'Timeperiod should be an instance of Big or string!')
    })
    it('should throw error with wrong values', () => {
      assert.throws(dema.bind(null, [null], '1'), Error, 'Input value should be an instance of Big or NaN!')
    })
  })
  describe('output', () => {
    let input = ['45.73', '46.14', '46.36', '46.85', '46.92', '47.23', '46.86', '47.45', '47.61', '46.59', '46.9', '47.42', '47.58', '47.58', '48.01', '48.3', '48.72', '47.63', '47.35', '47.37', '47.75', '46.7', '46.28', '47.6', '48.24', '48.66', '48.64', '49.06', '49.16', '48.03', '47.87', '43.34', '42.99', '42.64', '42.91', '41.62', '42.16', '42.26', '41.65', '41.76', '41.72', '41.48', '41.42', '41.53', '41.55', '40.29', '40.72', '40.66', '40.96', '40.97', '41.21', '41.46', '42.9', '42.86', '42.88', '42.29', '42.5', '41.7', '41.56']
    input = input.map(Big)
    let output = ["NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "NaN", "48.010740712059333", "47.856054062718581", "47.862055427615479", "47.515261120559172", "47.117315803585639", "47.259606432600525", "47.577681764995597", "47.951346020070129", "48.218299909167292", "48.549788052805316", "48.821617700933074", "48.641218781053868", "48.447357726223859", "46.800976103528601", "45.468737955987855", "44.379264883469244", "43.681708037123092", "42.762791204870772", "42.288382707086301", "41.999617259574835", "41.613266265469645", "41.392212582953950", "41.243169619188768", "41.079821201488480", "40.963866601160569", "40.937686526522527", "40.946353202954168", "40.555581202781822", "40.427359245549696", "40.331364075979440", "40.377140397970279", "40.430357922675872", "40.563161127720910", "40.756090178115658", "41.384543834062037", "41.842118799313348", "42.188689848801800", "42.248503862135333", "42.359337908676447", "42.173719777561773", "41.987521862433379"]
    let result = dema(input, '10')
    it('should return an array', () => {
      assert.isTrue(Array.isArray(result))
    })
    it('should return correct values', () => {
      for (let i = 0; i < result.length; ++i) {
        assert.isTrue(result[i].toFixed(15) === output[i])
      }
    })
  })
}
